<template>
  <view>
    <view class="controls">
      <origin-button c-bind:tap="add">新增可用券(100)</origin-button>
      <origin-button c-bind:tap="deleteAll">删除可用券(all)</origin-button>
      <origin-button c-bind:tap="addLot">新增可用券(1000)</origin-button>
      <origin-button c-bind:tap="update">更新可用券(1)</origin-button>
      <origin-button c-bind:tap="updateAll">更新可用券(all)</origin-button>
      <origin-button c-bind:tap="deleteOne">删除可用券(1)</origin-button>
      <origin-button c-bind:tap="add2Lot">新增不可用券(1000)</origin-button>
      <origin-button c-bind:tap="add2Lot2">新增不可用券(5000)</origin-button>
      <origin-button c-bind:tap="toggleList">切换到{{show2?'可用券':'不可用券'}}</origin-button>
      <origin-button c-bind:tap="reLaunch">刷新页面</origin-button>
      <origin-button c-bind:tap="reLaunch2">进入静态测试</origin-button>
    </view>
    <view c-if="{{!show2}}" class="couponList">
      <view class="title">可用券列表({{listData.length}})</view>
      <coupon c-for="{{listData}}" c-key="id" info="{{item}}"></coupon>
    </view>
    <view c-else class="couponList">
      <view class="title">不可用券列表({{listData2.length}})</view>
      <coupon c-for="{{listData2}}" c-key="id" info="{{item}}"></coupon>
    </view>
  </view>
</template>

<script>
  import { buildData } from '../../../../../utils/data'
  import { getTimeWithModal, getReadyTimeWithModal, setReadyStart } from '../../../../../utils/proxy'

  class Index {
    data = {
      listData: [],
      listData2: [],
      show2: false
    }

    onReady () {
      getReadyTimeWithModal()
    }

    methods = {
      reLaunch () {
        setReadyStart()
        wx.reLaunch({
          url: '/pages/index'
        })
      },
      reLaunch2 () {
        setReadyStart()
        wx.reLaunch({
          url: '/pages/static'
        })
      },
      toggleList () {
        getTimeWithModal(this)
        this.show2 = !this.show2
      },
      add2Lot () {
        getTimeWithModal(this)
        this.listData2 = this.listData2.concat(buildData(1000, true))
      },
      add2Lot2 () {
        getTimeWithModal(this)
        this.listData2 = this.listData2.concat(buildData(5000, true))
      },
      add () {
        getTimeWithModal(this)
        this.listData = this.listData.concat(buildData(100))
      },
      addLot () {
        getTimeWithModal(this)
        this.listData = this.listData.concat(buildData(1000))
      },
      deleteOne () {
        getTimeWithModal(this)
        this.listData.shift()
      },
      deleteAll () {
        getTimeWithModal(this)
        this.listData = []
      },
      update () {
        getTimeWithModal(this)
        const listData = this.listData
        if (listData[0]) {
          listData[0].amount++
        }
      },
      updateAll () {
        getTimeWithModal(this)
        this.listData = this.listData.map((item) => {
          return Object.assign({}, item, {
            amount: item.amount + 1
          })
        })
      }
    }
  }

  export default new Index()
</script>

<script cml-type="json" type="application/json">
  {
    "base": {
      "usingComponents": {
        "coupon": "/components/coupon"
      }
    },
    "wx": {
      "backgroundTextStyle": "dark",
      "backgroundColor": "#E2E2E2"
    }
  }
</script>


<style lang="stylus">
  .couponList
    padding 0 12px

    .title
      font-size 16px
      margin-top 12px

  .controls
    padding 4px 12px 0 12px

    button
      margin-top 8px
      font-size 16px
</style>

